From https://github.com/codership/galera/pull/328
Date: Wed Aug 26 17:59:46 EEST 2015
Author: Otto Kekäläinen <otto@seravo.fi>
Subject: Fix pthread missing errors on many platforms
 As the patch https://github.com/codership/galera/pull/328.patch
 does not apply cleanly on 25.3.10, I adapted it by hand
 .
 See https://github.com/codership/galera/issues/321

---
diff --git a/SConstruct b/SConstruct
index 99c6e47..62ee307 100644
--- a/SConstruct
+++ b/SConstruct
@@ -23,7 +23,8 @@ machine = platform.machine()
 bits = platform.architecture()[0]
 print 'Host: ' + sysname + ' ' + machine + ' ' + bits
 
-x86 = 0
+x86 = any(arch in machine for arch in [ 'x86', 'i686', 'i386' ])
+
 if bits == '32bit':
     x86 = 32
 elif bits == '64bit':
@@ -86,25 +87,27 @@ elif debug_lvl == 3:
 if dbug:
     opt_flags = opt_flags + ' -DGU_DBUG_ON'
 
-
-if x86 == 32:
-    compile_arch = ' -m32 -march=i686'
-    link_arch    = compile_arch
-    if sysname == 'linux':
-        link_arch = link_arch + ' -Wl,-melf_i386'
-elif x86 == 64 and sysname != 'sunos':
-    compile_arch = ' -m64'
-    link_arch    = compile_arch
-    if sysname == 'linux':
-        link_arch = link_arch + ' -Wl,-melf_x86_64'
-elif machine == 'ppc64':
+if sysname == 'sunos':
     compile_arch = ' -mtune=native'
     link_arch    = ''
-elif sysname == 'sunos':
-    compile_arch = ' -mtune=native'
+elif x86:
+    if bits == 32:
+        compile_arch = ' -m32 -march=i686'
+        link_arch    = compile_arch
+        if sysname == 'linux':
+            link_arch = link_arch + ' -Wl,-melf_i386'
+    else:
+        compile_arch = ' -m64'
+        link_arch    = compile_arch
+        if sysname == 'linux':
+            link_arch = link_arch + ' -Wl,-melf_x86_64'
+elif machine == 's390x':
+    compile_arch = ' -mzarch -march=z196 -mtune=zEC12'
     link_arch    = ''
+    if bits == 32:
+        compile_arch += ' -m32'
 else:
-    compile_arch = ''
+    compile_arch = ' -mtune=native'
     link_arch    = ''
 
 
@@ -254,7 +257,7 @@ if not conf.CheckLib('pthread'):
 
 # libatomic may be needed on some 32bit platforms (and 32bit userland PPC64)
 # for 8 byte atomics but not generally required
-if 0 == x86:
+if not x86:
     conf.CheckLib('atomic')
 
 if sysname != 'darwin':
diff --git a/galerautils/src/SConscript b/galerautils/src/SConscript
index d96eb95..47ddd6b 100644
--- a/galerautils/src/SConscript
+++ b/galerautils/src/SConscript
@@ -33,7 +33,7 @@ crc32c_env.Append(CPPFLAGS = ' -DWITH_GALERA')
 crc32c_sources = [ '#/www.evanjones.ca/crc32c.c' ]
 crc32c_objs = crc32c_env.SharedObject(crc32c_sources)
 
-if x86 != 0:
+if x86:
     crc32c_env.Append(CFLAGS = ' -msse4.2')
     if sysname == 'sunos':
         # Ideally we want to simply strip SSE4.2 flag from the resulting
